import streamlit as st
import matplotlib.pyplot as plt

st.set_page_config(page_title="Retail Fraud Strategy Builder", layout="centered")
st.title("üõ°Ô∏è Retail Fraud Strategy Builder")

# Initialize session state for clearing
if "clear" not in st.session_state:
    st.session_state.clear = False

def clear_all():
    for key in list(st.session_state.keys()):
        del st.session_state[key]
    st.session_state.clear = True

# Clear button
if st.button("üßπ Clear All"):
    clear_all()
    st.rerun()

# Step 1: Choose domain
st.header("1. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å")
st.markdown("**Retail Fraud Risk** ‚Äî ‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏à‡∏£‡∏¥‡∏ï‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ñ‡πâ‡∏≤‡∏õ‡∏•‡∏µ‡∏Å")

# Step 2: Select Internal vs External
st.header("2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó Fraud ‡∏´‡∏•‡∏±‡∏Å")
fraud_group = st.radio("Fraud Type", ["Internal Fraud", "External Fraud"], key="fraud_group")

# Step 3: Fraud Subtypes
fraud_types = {
    "Internal Fraud": [
        "Inventory & Fulfillment Fraud",
        "Insider / Collusion Fraud"
    ],
    "External Fraud": [
        "Transaction Fraud",
        "Promotion & Loyalty Fraud",
        "Return & Refund Fraud",
        "Digital & Channel-Specific Fraud"
    ]
}
selected_fraud_subtype = st.selectbox("3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Fraud Subtype", fraud_types[fraud_group], key="fraud_subtype")

# Step 4: Specific Use Cases
fraud_use_cases = {
    "Inventory & Fulfillment Fraud": [
        "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏•‡∏≠‡∏°",
        "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô stock ‡∏ú‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á"
    ],
    "Insider / Collusion Fraud": [
        "‡∏™‡∏°‡∏£‡∏π‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Ñ‡∏¥‡∏î‡∏Å‡∏±‡∏ö supplier (kickback, order‡∏õ‡∏•‡∏≠‡∏°)",
        "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏∞‡∏ö‡∏ö stock ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô"
    ],
    "Transaction Fraud": [
        "‡∏õ‡∏•‡∏≠‡∏°‡πÅ‡∏õ‡∏•‡∏á slip ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
        "‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏õ‡∏•‡∏≠‡∏°"
    ],
    "Promotion & Loyalty Fraud": [
        "‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏ã‡πâ‡∏≥‡πÇ‡∏î‡∏¢‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ",
        "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏•‡∏≠‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•"
    ],
    "Return & Refund Fraud": [
        "‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏•‡∏≠‡∏° / ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤",
        "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ refund ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á"
    ],
    "Digital & Channel-Specific Fraud": [
        "‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ç‡πÇ‡∏°‡∏¢"
    ]
}
st.header("4. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Use Cases ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á")
selected_use_cases = st.multiselect("Use Cases", fraud_use_cases.get(selected_fraud_subtype, []), key="use_cases")

# Step 5: Reconfirm Focus Area
st.header("5. ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô Problem Space ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏ü‡∏Å‡∏±‡∏™")
st.markdown(f"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà: **{selected_fraud_subtype}**")

# Step 6: Key Dimensions
st.header("6. ‡∏£‡∏∞‡∏ö‡∏∏ Key Dimensions")
dimensions = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Dimensions ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á", ["Customer", "Process", "Technology", "Finance"], key="dimensions")

# Step 7: Select Models
st.header("7. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Model ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°")
models = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏°‡πÄ‡∏î‡∏•", ["Analytical", "Behavioral", "Strategic", "Financial", "Process"], key="models")

# Step 8: Visualization Method
st.header("8. ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£ Visualization ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°")
viz = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Visualization", ["2x2 Matrix", "Flow Diagram", "Network Graph", "Timeline", "Bar/Heatmap"], key="viz")

# Step 9: Hypotheses
st.header("9. ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ê‡∏≤‡∏ô (Hypotheses)")
hypo = st.text_area("‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Hypotheses ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏∏‡∏à‡∏£‡∏¥‡∏ï", key="hypo")

# Step 10: Data Sources
st.header("10. ‡∏£‡∏∞‡∏ö‡∏∏ Data Sources ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå")
data_sources = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", ["Order Logs", "Refund Records", "Customer Info", "Inventory Logs", "Card Transactions"], key="sources")

# Step 11: Generate Playbook
if st.button("üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á Data Strategy Playbook"):
    st.subheader("üéØ ‡∏™‡∏£‡∏∏‡∏õ Framework & Strategy ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    st.write("**Fraud Group:**", fraud_group)
    st.write("**Subtype:**", selected_fraud_subtype)
    st.write("**Use Cases:**", ", ".join(selected_use_cases))
    st.write("**Key Dimensions:**", ", ".join(dimensions))
    st.write("**Model Types:**", ", ".join(models))
    st.write("**Visualization:**", viz)
    st.write("**Hypothesis:**", hypo)
    st.write("**Data Sources:**", ", ".join(data_sources))

    with st.expander("üìò ‡∏î‡∏π Playbook Summary"):
        try:
            with open("framework.md", "r", encoding="utf-8") as f:
                st.markdown(f.read())
        except FileNotFoundError:
            st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå framework.md ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô repo ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö app.py")
